name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform-setup:
    name: "Terraform setup"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2

      - name: Setup terraform variables
        id: vars
        run: |-
          cat > pipeline.auto.tfvars <<EOF
          access_key="${{secrets.ACCESS_KEY}}"
          secret_key= "${{secrets.SECRET_KEY}}"
          db_username="${{secrets.DB_USERNAME}}"
          db_password="${{secrets.DB_PASSWORD}}"
          environment="${{vars.ENVIRONMENT}}"
          region="${{vars.REGION}}"
          EOF

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Format check
        id: fmtcheck
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

  terraform-plan:
    name: "terraform plan"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: terraform-setup
    permissions:
      pull-requests: write

    steps:
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.TOKEN_GIT }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  terraform-apply:
    name: "Terraform apply"
    needs: terraform-setup
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
